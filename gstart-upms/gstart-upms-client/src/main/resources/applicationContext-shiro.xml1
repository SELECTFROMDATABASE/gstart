<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <description>gstart-upms</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder location="classpath:gstart-upms-client.properties"/>
    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${gstart.upms.sso.server.url}"/>
        <property name="successUrl" value="${gstart.upms.successUrl}"/>
        <property name="unauthorizedUrl" value="${gstart.upms.unauthorizedUrl}"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="upmsAuthenticationFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /api/** = authc
                /api/manage/** = authc
                /api/manage/index = authc
                /druid/** = user
                /swagger-ui.html = user
                /resources/** = anon
                /sso/login = anon
                /** = anon
            </value>
        </property>
    </bean>



    <!-- 重写authc过滤器 -->
    <bean id="upmsAuthenticationFilter" class="com.gstart.upms.client.shiro.filter.UpmsAuthenticationFilter"/>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="upmsRealm"/>
            </list>
        </property><!--
        <property name="sessionManager" ref="sessionManager"/>-->
        <property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled" value="false"/>
    </bean>


    <!-- realm实现，继承自AuthorizingRealm -->
    <bean id="upmsRealm" class="com.gstart.upms.client.shiro.realm.UserRealm"></bean>

    <!-- 会话管理器 -->
<!--    <bean id="sessionManager" class="comA.gstart.upms.client.shiro.manager.SessionManager">
        &lt;!&ndash; 全局session超时时间 &ndash;&gt;
        <property name="globalSessionTimeout" value="${gstart.upms.session.timeout}"/>
        &lt;!&ndash; sessionDAO &ndash;&gt;
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionListeners">
            <list>
                <ref bean="sessionListener"/>
            </list>
        </property>
        <property name="sessionIdCookieEnabled" value="false"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->
    <!-- 配置需要向Cookie中保存数据的配置模版 -->


<!--    &lt;!&ndash; 会话DAO，可重写，持久化session &ndash;&gt;
    <bean id="sessionDAO" class="com.gstart.upms.client.shiro.session.UpmsSessionDao">
    </bean>-->

<!--
    &lt;!&ndash; session工厂 &ndash;&gt;
    <bean id="sessionFactory" class="com.gstart.upms.client.shiro.session.UpmsSessionFactory"/>
-->

    <!-- 设置SecurityUtils，相当于调用SecurityUtils.setSecurityManager(securiUpmsAuthenticationFiltertyManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 开启Shiro Spring AOP权限注解@RequiresPermissions的支持 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>